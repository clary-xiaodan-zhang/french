

* {
  font-family: 'Roboto', sans-serif;
}

.td-left td {
  text-align: left;
}

h1 {
  text-align: center;}

h3 {
  font-style: italic;
}

a {
  color: inherit; }

table {
  margin-top: 10px;
  margin-bottom: 10px;
  margin-right: 10px;
  border: 2px solid gray; 
  border-collapse: collapse; 
  padding: 3px 10px; 
  text-align: center; 
}

td {
  border: 1px dotted gray; 
  border-collapse: collapse; 
  padding: 3px 10px; 
  text-align: center;
}

th {
  border: 1px solid gray; 
  border-collapse: collapse; padding: 3px 10px; 
  text-align: center;
}

button {
  margin-bottom: 10px;
  border: 2px solid; 
  background-color: lightgray; 
  color: white; padding: 15px 20px; 
  text-align: center; 
  text-decoration: none; 
  display: inline-block; 
  cursor: pointer; 
  transition-duration: 0.4s; 
}

button:hover { 
  background-color: white; color:darkgray
}

.right-align {
  text-align: right;
}

.left-align {
  text-align: left;
}



/* Style for the header */
.header {
  padding: 8px 16px;
  background: #555;
  color: #f1f1f1;
}
.anchor {
  display: block;
  height: 20px; /* Same as your header's height */
  margin-top: -20px; /* Negative margin of the same value */
  visibility: hidden; /* Make the element invisible */
  /* The .anchor element is given a height of 60px (or another height).
  Normally, this would add 60 pixels of space to your layout. 
  However, by also applying a margin-top of -60px, you are effectively pulling the element up by 60 pixels.
  This upward pull counteracts the space added by its height. 
  As a result, the .anchor element does not consume any additional vertical space in the layout
  - it occupies 60 pixels of height, but simultaneously pulls itself up by 60 pixels.
  Visually, it's as if the .anchor element is sitting 'on top' of the content above it, rather than pushing that content down and creating extra space.*/
}
/* Page content */
.content {
  padding: 16px;
}
/* The sticky class is added to the header with JS when it reaches its scroll position */
.sticky {
  position: fixed;
  top: 0;
  width: 100%
}
/* Add some top padding to the page content to prevent sudden quick movement (as the header gets a new position at the top of the page (position:fixed and top:0) */
.sticky + .content {
  padding-top: 102px;
} 


/* Style for lists with different levels of indentation */
ul {
  padding-left: 30px;
}

.custom-list {
  list-style-type: disc;
  padding-left: 0px;
}

.custom-list li {
  margin-left: -10px; /* Adjust the indentation level by changing this value */
  position: relative;
}

.custom-list ul {
  margin-top: 3px; /* Adjust the spacing between nested lists */
}


/* To make two tables appear in the same row */
.container {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}

@media (max-width: 600px) {
  /* Change layout for smaller screens */
  .container {
    flex-direction: column;
  }
}

.box {
  margin: 5px;
}